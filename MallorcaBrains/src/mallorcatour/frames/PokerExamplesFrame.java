/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PSMFrame.java
 *
 * Created on 15.10.2012, 18:14:26
 */
package mallorcatour.frames;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import mallorcatour.core.game.Hand;
import mallorcatour.core.game.PokerStreet;
import mallorcatour.core.game.situation.LocalSituation;
import mallorcatour.core.game.situation.LocalSituationDistance;
import mallorcatour.core.vector.BaseVector;
import mallorcatour.core.vector.EuclidDistanceMod;
import mallorcatour.core.vector.VectorUtils;
import mallorcatour.frames.util.FrameUtils;
import mallorcatour.interfaces.IRandomizer;
import mallorcatour.neuronetworkwrapper.LEManager;
import mallorcatour.neuronetworkwrapper.PokerExamples;
import mallorcatour.neuronetworkwrapper.PokerLearningExample;
import mallorcatour.util.DoubleUtils;
import mallorcatour.util.MyFileWriter;
import mallorcatour.util.SerializatorUtils;
import mallorcatour.util.StringUtils;
import mallorcatour.util.UniformRandomizer;

/**
 *
 * @author Andrew
 */
public class PokerExamplesFrame extends javax.swing.JFrame {

    private PokerLearningExample selectedExample;
    private List<PokerLearningExample> examples;
    private List<PokerLearningExample> preflopExamples;
    private List<PokerLearningExample> flopExamples;
    private List<PokerLearningExample> turnExamples;
    private List<PokerLearningExample> riverExamples;
    private DefaultListModel examplesModel, sameExamplesModel;

    /** Creates new form PSMFrame */
    public PokerExamplesFrame() {
        initComponents();

        sameExamplesModel = new DefaultListModel();
        examplesModel = new DefaultListModel();
        examplesList.setModel(examplesModel);
        sameExamplesList.setModel(sameExamplesModel);
        enableButtons(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        sameExamplesList = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        sameExamplesSizeField = new javax.swing.JTextField();
        averageOutputFromSameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        similarityField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        maxDistanceSlider = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        maxDistanceField = new javax.swing.JTextField();
        avOutputErrorField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        sameExampleHandTextArea = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        averageOutputFromAllField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        sameExampleHandTextArea1 = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        learningExamplesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        examplesList = new javax.swing.JList();
        examplesInfoLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        handTextArea = new javax.swing.JTextArea();
        streetField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        preflopViewMenuItem = new javax.swing.JMenuItem();
        flopViewMenuItem = new javax.swing.JMenuItem();
        turnViewMenuItem = new javax.swing.JMenuItem();
        riverViewMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 900, 600));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        sameExamplesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        sameExamplesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sameExamplesListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(sameExamplesList);

        jLabel4.setText("Size:");

        jLabel5.setText("Av. output:");

        jButton9.setText("Test similarity");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel8.setText("Error");

        maxDistanceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxDistanceSliderStateChanged(evt);
            }
        });

        jButton1.setText("Find");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(maxDistanceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addGap(28, 28, 28))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(maxDistanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(maxDistanceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(maxDistanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sameExamplesSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(averageOutputFromSameField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avOutputErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(18, 18, 18)
                        .addComponent(similarityField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sameExamplesSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(averageOutputFromSameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(avOutputErrorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(similarityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        sameExampleHandTextArea.setColumns(20);
        sameExampleHandTextArea.setRows(5);
        jScrollPane3.setViewportView(sameExampleHandTextArea);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Analyse by same", jPanel8);

        jButton16.setText("Average output");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(averageOutputFromAllField, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(798, 798, 798))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addContainerGap(796, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton16)
                .addGap(18, 18, 18)
                .addComponent(averageOutputFromAllField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Common analysis", jPanel14);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
        );

        sameExampleHandTextArea1.setColumns(20);
        sameExampleHandTextArea1.setRows(5);
        jScrollPane4.setViewportView(sameExampleHandTextArea1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Graph", jPanel9);

        examplesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        examplesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examplesListMouseClicked(evt);
            }
        });
        examplesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                examplesListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(examplesList);

        javax.swing.GroupLayout learningExamplesPanelLayout = new javax.swing.GroupLayout(learningExamplesPanel);
        learningExamplesPanel.setLayout(learningExamplesPanelLayout);
        learningExamplesPanelLayout.setHorizontalGroup(
            learningExamplesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(learningExamplesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        learningExamplesPanelLayout.setVerticalGroup(
            learningExamplesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(learningExamplesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Learning examples", learningExamplesPanel);

        handTextArea.setColumns(20);
        handTextArea.setRows(5);
        jScrollPane2.setViewportView(handTextArea);

        jMenu2.setText("Examples");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Add examples...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem4.setText("Save...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem9.setText("Save as txt");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem5.setText("Clear");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Similarity");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Preflop");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem6.setText("Flop");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Turn");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("River");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("View");
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });

        preflopViewMenuItem.setText("Preflop");
        preflopViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preflopViewMenuItemActionPerformed(evt);
            }
        });
        jMenu5.add(preflopViewMenuItem);

        flopViewMenuItem.setText("Flop");
        flopViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flopViewMenuItemActionPerformed(evt);
            }
        });
        jMenu5.add(flopViewMenuItem);

        turnViewMenuItem.setText("Turn");
        turnViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnViewMenuItemActionPerformed(evt);
            }
        });
        jMenu5.add(turnViewMenuItem);

        riverViewMenuItem.setText("River");
        riverViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riverViewMenuItemActionPerformed(evt);
            }
        });
        jMenu5.add(riverViewMenuItem);

        jMenuBar1.add(jMenu5);

        jMenu1.setText("Neuro");

        jMenuItem2.setText("Load...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(examplesInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(streetField, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(examplesInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enableButtons(boolean enable) {
        //implement for menu items
    }
    private void examplesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_examplesListValueChanged
        selectedExample = (PokerLearningExample) examplesList.getSelectedValue();
        if (selectedExample == null) {
            return;
        }
        streetField.setText(PokerStreet.valueOf(
                selectedExample.getSituation().getStreet()).toString());
        handTextArea.setText(selectedExample.getHand().toString());
    }//GEN-LAST:event_examplesListValueChanged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String dir = FrameUtils.openDirectoryChooser(this, "./");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void processNewExamples(List<PokerLearningExample> newExamples) {
        if (examples == null) {
            examples = new ArrayList<PokerLearningExample>();
            preflopExamples = new ArrayList<PokerLearningExample>();
            flopExamples = new ArrayList<PokerLearningExample>();
            turnExamples = new ArrayList<PokerLearningExample>();
            riverExamples = new ArrayList<PokerLearningExample>();
        }
        examples.addAll(newExamples);
        for (PokerLearningExample example : newExamples) {
            if (example.getSituation().getStreet() == LocalSituation.PREFLOP) {
                preflopExamples.add(example);
            } else if (example.getSituation().getStreet() == LocalSituation.FLOP) {
                flopExamples.add(example);
            } else if (example.getSituation().getStreet() == LocalSituation.TURN) {
                turnExamples.add(example);
            } else if (example.getSituation().getStreet() == LocalSituation.RIVER) {
                riverExamples.add(example);
            }
        }
        preflopViewMenuItem.setText("Preflop " + preflopExamples.size());
        flopViewMenuItem.setText("Flop " + flopExamples.size());
        turnViewMenuItem.setText("Turn " + turnExamples.size());
        riverViewMenuItem.setText("River " + riverExamples.size());
        examplesInfoLabel.setText("There are " + examples.size() + " examples");
    }

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        testSimilarity(flopExamples, 0.1, 20);
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (selectedExample == null) {
            return;
        }
        LocalSituationDistance distance = new LocalSituationDistance();
        sameExamplesModel.clear();
        int count = 0;
        double[] averageOutput = new double[examples.get(0).getAdvice().getValues().size()];
        double maxDistanceForSimilarity = (double) maxDistanceSlider.getValue() / 100;
        for (PokerLearningExample currentExample : examples) {
            if (selectedExample == currentExample) {
                continue;
            }
            if (currentExample.getSituation().getStreet()
                    != selectedExample.getSituation().getStreet()) {
                continue;
            }
            LocalSituation selectedSituation = selectedExample.getSituation();
            LocalSituation currentSituation = currentExample.getSituation();
            if (distance.getDistance(selectedSituation,
                    currentSituation) < maxDistanceForSimilarity) {
                List<Number> output = currentExample.getAdvice().getValues();
                int i = 0;
                for (Number value : output) {
                    averageOutput[i++] += value.doubleValue();
                }
                sameExamplesModel.addElement(currentExample);
                count++;
            }
        }
        //calculating average output
        int size = sameExamplesModel.size();
        for (int i = 0; i < averageOutput.length; i++) {
            averageOutput[i] /= size;
            averageOutput[i] = DoubleUtils.digitsAfterComma(averageOutput[i], 2);
        }
        if (selectedExample.getAdvice() != null) {
            double error = VectorUtils.getDistance(selectedExample.getAdvice(),
                    new BaseVector(averageOutput));
            error = DoubleUtils.digitsAfterComma(error, 2);
            avOutputErrorField.setText(String.valueOf(error));
        } else {
            avOutputErrorField.setText("No info");
        }
        averageOutputFromSameField.setText(Arrays.toString(averageOutput));
        sameExamplesSizeField.setText(String.valueOf(count));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void maxDistanceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxDistanceSliderStateChanged
        maxDistanceField.setText(String.valueOf((double) maxDistanceSlider.getValue() / 100));
    }//GEN-LAST:event_maxDistanceSliderStateChanged

    private void examplesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examplesListMouseClicked
    }//GEN-LAST:event_examplesListMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String[] pathes = FrameUtils.openFileChooserForMultipleFiles(this, "./");
        if (pathes == null) {
            return;
        }
        for (String path : pathes) {
            List<PokerLearningExample> newExamples = SerializatorUtils.load(path,
                    PokerExamples.class).getExamples();
            processNewExamples(newExamples);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        String path = FrameUtils.openFileChooser(this, "./");
        if (path == null) {
            return;
        }
        SerializatorUtils.save(path, new PokerExamples(examples));
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    }//GEN-LAST:event_jButton9ActionPerformed

    private void testSimilarity(List<PokerLearningExample> examplesWithSimilar,
            double maxDistanceForSimilarity, int neededCountOfSimilar) {
        int dimension = examplesWithSimilar.get(0).getSituation().getValues().size();
        String defaultInput = "";
        for (int i = 0; i < dimension; i++) {
            defaultInput += "" + i + ",";
        }
        defaultInput = defaultInput.substring(0, defaultInput.length() - 1);
        String inputColumns =
                JOptionPane.showInputDialog(this, "Columns for calculating distance", defaultInput);
        if (inputColumns == null) {
            return;
        }
        IRandomizer randomizer = new UniformRandomizer();
        EuclidDistanceMod distance = new EuclidDistanceMod(StringUtils.parseIntArray(inputColumns, ","));
        int allCount = 0;
        double error = 0;
        sameExamplesModel.clear();
        //form test sample of examples
        int testCount = 100;
        int i = 0;
        List<PokerLearningExample> testExamples = new ArrayList<PokerLearningExample>();
        while (i < testCount) {
            int random = (int) randomizer.getRandom(0, examplesWithSimilar.size());
            PokerLearningExample current = examplesWithSimilar.get(random);

            if (!testExamples.contains(current)) {
                testExamples.add(current);
                i++;
            }
        }
        //get non similar examples
        for (PokerLearningExample testExample : testExamples) {
            int count = 0;
            List<PokerLearningExample> similarExamples =
                    new ArrayList<PokerLearningExample>();
            for (PokerLearningExample example : examplesWithSimilar) {
                if (testExample == example) {
                    continue;
                }
                if (distance.getDistance(testExample.getSituation(),
                        example.getSituation()) < maxDistanceForSimilarity) {
                    count++;
                    similarExamples.add(example);
                }
            }
            if (count >= neededCountOfSimilar) {
                allCount++;
                double[] averageOutput = LEManager.getAverageOutput(similarExamples);
                error += VectorUtils.getDistance(new BaseVector(averageOutput), testExample.getAdvice());
            } else {
                sameExamplesModel.addElement(testExample);
            }
        }
        error /= allCount;
        error = DoubleUtils.digitsAfterComma(error, 3);
        double percentOfSimilarity = DoubleUtils.digitsAfterComma(
                (double) allCount / testCount, 2);
        JOptionPane.showMessageDialog(this, "Average error: " + error + "\n"
                + "Percent of similarity: " + percentOfSimilarity + "\n");
    }
    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
//        double[] averageOutput = LEManager.getAverageOutput(allExamples);
//        averageOutputFromAllField.setText(Arrays.toString(averageOutput));
//        for (int i = 0; i < averageOutput.length; i++) {
//            averageOutput[i] = DoubleUtils.digitsAfterComma(averageOutput[i], 2);
//        }
//        averageOutputFromAllField.setText(Arrays.toString(averageOutput));
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        examples.clear();
        examplesModel.clear();
        sameExamplesModel.clear();
        preflopExamples.clear();
        turnExamples.clear();
        flopExamples.clear();
        riverExamples.clear();
        examplesInfoLabel.setText("There are no examples");
}//GEN-LAST:event_jMenuItem5ActionPerformed

    private void sameExamplesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sameExamplesListValueChanged
        PokerLearningExample selectedSameExample = (PokerLearningExample) sameExamplesList.getSelectedValue();
        if (selectedSameExample == null) {
            sameExampleHandTextArea.setText("");
        } else {
            Hand hand = selectedSameExample.getHand();
            sameExampleHandTextArea.setText(hand.toString());
        }
    }//GEN-LAST:event_sameExamplesListValueChanged

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        new Thread(new Runnable() {

            public void run() {
                testSimilarity(flopExamples, 0.05, 20);
            }
        }).start();

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu5ActionPerformed

    private void preflopViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preflopViewMenuItemActionPerformed
        showExamples(preflopExamples);
        uncheckAllViewItems();
        preflopViewMenuItem.setSelected(true);
    }//GEN-LAST:event_preflopViewMenuItemActionPerformed

    private void turnViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnViewMenuItemActionPerformed
        showExamples(turnExamples);
        uncheckAllViewItems();
        turnViewMenuItem.setSelected(true);
    }//GEN-LAST:event_turnViewMenuItemActionPerformed

    private void riverViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riverViewMenuItemActionPerformed
        showExamples(riverExamples);
        uncheckAllViewItems();
        riverViewMenuItem.setSelected(true);
    }//GEN-LAST:event_riverViewMenuItemActionPerformed

    private void flopViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flopViewMenuItemActionPerformed
        showExamples(flopExamples);
        uncheckAllViewItems();
        flopViewMenuItem.setSelected(true);
    }//GEN-LAST:event_flopViewMenuItemActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        new Thread(new Runnable() {

            public void run() {
                testSimilarity(turnExamples, 0.1, 20);
            }
        }).start();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new Thread(new Runnable() {

            public void run() {
                testSimilarity(preflopExamples, 0.05, 20);
            }
        }).start();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        new Thread(new Runnable() {

            public void run() {
                testSimilarity(riverExamples, 0.1, 20);
            }
        }).start();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        MyFileWriter preflopWriter = MyFileWriter.prepareForWriting("preflop.txt", false);
        MyFileWriter flopWriter = MyFileWriter.prepareForWriting("flop.txt", false);
        MyFileWriter turnWriter = MyFileWriter.prepareForWriting("turn.txt", false);
        MyFileWriter riverWriter = MyFileWriter.prepareForWriting("river.txt", false);
        LEManager.toFile(preflopWriter, preflopExamples);
        LEManager.toFile(flopWriter, flopExamples);
        LEManager.toFile(turnWriter, turnExamples);
        LEManager.toFile(riverWriter, riverExamples);
        preflopWriter.endWriting();
        flopWriter.endWriting();
        turnWriter.endWriting();
        riverWriter.endWriting();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void uncheckAllViewItems() {
        preflopViewMenuItem.setSelected(false);
        flopViewMenuItem.setSelected(false);
        turnViewMenuItem.setSelected(false);
        riverViewMenuItem.setSelected(false);
    }

    private void showExamples(List<PokerLearningExample> showExamples) {
        examplesModel.clear();
        for (PokerLearningExample example : showExamples) {
            examplesModel.addElement(example);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PokerExamplesFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField avOutputErrorField;
    private javax.swing.JTextField averageOutputFromAllField;
    private javax.swing.JTextField averageOutputFromSameField;
    private javax.swing.JLabel examplesInfoLabel;
    private javax.swing.JList examplesList;
    private javax.swing.JMenuItem flopViewMenuItem;
    private javax.swing.JTextArea handTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel learningExamplesPanel;
    private javax.swing.JTextField maxDistanceField;
    private javax.swing.JSlider maxDistanceSlider;
    private javax.swing.JMenuItem preflopViewMenuItem;
    private javax.swing.JMenuItem riverViewMenuItem;
    private javax.swing.JTextArea sameExampleHandTextArea;
    private javax.swing.JTextArea sameExampleHandTextArea1;
    private javax.swing.JList sameExamplesList;
    private javax.swing.JTextField sameExamplesSizeField;
    private javax.swing.JTextField similarityField;
    private javax.swing.JTextField streetField;
    private javax.swing.JMenuItem turnViewMenuItem;
    // End of variables declaration//GEN-END:variables
}
